// <auto-generated />
using System;
using BirthflowMicroServices.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BirthflowMicroServices.Infraestructure.Migrations
{
    [DbContext(typeof(BirthFlowDbContext))]
    [Migration("20240316225140_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Configuracione", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Lenguaje")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<bool?>("PermisoNotificacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermisoVibracion")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Configur__2B3DE7981A907EFD");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.DilatacionCervical", b =>
                {
                    b.Property<string>("DilatacionCervicalId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("DilatacionCervicalID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<bool>("RemOram")
                        .HasColumnType("bit")
                        .HasColumnName("RemORam");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("DilatacionCervicalId")
                        .HasName("PK__Dilataci__AF44EEABDFE91BA7");

                    b.HasIndex("PartogramaId");

                    b.ToTable("DilatacionesCervicales");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.DilatacionesCervicalesHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("DilatacionCervicalId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("DilatacionCervicalID");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Hora")
                        .HasColumnType("datetime");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<bool?>("RemOram")
                        .HasColumnType("bit")
                        .HasColumnName("RemORam");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(4, 2)");

                    b.HasKey("HistoricoId")
                        .HasName("PK__Dilataci__4A561D7649310E4F");

                    b.ToTable("DilatacionesCervicales_Historico", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.FrecuenciaCardiacaFetal", b =>
                {
                    b.Property<string>("FrecuenciaCardiacaFetalId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("FrecuenciaCardiacaFetalID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<DateTime>("Tiempo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("FrecuenciaCardiacaFetalId")
                        .HasName("PK__Frecuenc__10979C37346E864D");

                    b.HasIndex("PartogramaId");

                    b.ToTable("FrecuenciaCardiacaFetal", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.FrecuenciaCardiacaFetalHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("FrecuenciaCardiacaFetalId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("FrecuenciaCardiacaFetalID");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<DateTime?>("Tiempo")
                        .HasColumnType("datetime");

                    b.Property<string>("Valor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("HistoricoId")
                        .HasName("PK__Frecuenc__4A561D76C42EB14B");

                    b.ToTable("FrecuenciaCardiacaFetal_Historico", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.FrecuenciaContracione", b =>
                {
                    b.Property<string>("FrecuenciaContracionesId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("FrecuenciaContracionesID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<DateTime>("Tiempo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("FrecuenciaContracionesId")
                        .HasName("PK__Frecuenc__1B45F4EDD79E165B");

                    b.HasIndex("PartogramaId");

                    b.ToTable("FrecuenciaContraciones");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.FrecuenciaContracionesHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("FrecuenciaContracionesId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("FrecuenciaContracionesID");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<DateTime?>("Tiempo")
                        .HasColumnType("datetime");

                    b.Property<string>("Valor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("HistoricoId")
                        .HasName("PK__Frecuenc__4A561D7653F0F353");

                    b.ToTable("FrecuenciaContraciones_Historico", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.NotaParto", b =>
                {
                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<string>("Alumbramiento")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Apgar")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Caputto")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Circular")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Expulsivo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("HuellaPlantar")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Lamniotico")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("LAmniotico");

                    b.Property<string>("Meconio")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Miccion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Pa")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("PA");

                    b.Property<string>("Placenta")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Temperatura")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("PartogramaId")
                        .HasName("PK__NotaPart__2A6C391348ED606B");

                    b.ToTable("NotaParto", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.NotaPartoHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Alumbramiento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Apgar")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Caputto")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Circular")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Expulsivo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Hora")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HuellaPlantar")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Lamniotico")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LAmniotico");

                    b.Property<string>("Meconio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Miccion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Pa")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PA");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<string>("Placenta")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Temperatura")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("HistoricoId")
                        .HasName("PK__NotaPart__4A561D76E059B619");

                    b.ToTable("NotaParto_Historico", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.NotificationPartograma", b =>
                {
                    b.Property<string>("NotificacionId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NotificacionID");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.HasIndex("NotificacionId");

                    b.HasIndex("PartogramaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("NotificationPartograma", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Notificatione", b =>
                {
                    b.Property<string>("NotificacionId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NotificacionID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Leido")
                        .HasColumnType("bit");

                    b.Property<byte?>("NotificationTypeId")
                        .HasColumnType("tinyint")
                        .HasColumnName("NotificationTypeID");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.HasKey("NotificacionId")
                        .HasName("PK__Notifica__BCC120C41D39179E");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificationes");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Observacione", b =>
                {
                    b.Property<string>("VigilanciaMedicaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("VigilanciaMedicaID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("VigilanciaMedicaId")
                        .HasName("PK__Observac__7C44AA21ECA9F18E");

                    b.ToTable("Observaciones");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.ObservacionesHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Header")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("VigilanciaMedicaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("VigilanciaMedicaID");

                    b.HasKey("HistoricoId")
                        .HasName("PK__Observac__4A561D76B6D4C7C9");

                    b.ToTable("Observaciones_Historico", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Partograma", b =>
                {
                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Expediente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.HasKey("PartogramaId")
                        .HasName("PK__Partogra__2A6C3913CC5F9652");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Partogramas");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.PartogramaEstado", b =>
                {
                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<bool>("Archivado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("DilatacionCervicalesNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("Fcfydcnotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("FCFYDCNotificacion");

                    b.Property<bool>("Permanente")
                        .HasColumnType("bit");

                    b.Property<bool>("PlanoHodgeNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("Silenciado")
                        .HasColumnType("bit");

                    b.Property<byte?>("TipoPermisoId")
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoPermisoID");

                    b.Property<DateTime>("UltimaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("VigilanciaMedicaNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("PartogramaId")
                        .HasName("PK__Partogra__2A6C391353C62D84");

                    b.HasIndex("TipoPermisoId");

                    b.ToTable("PartogramaEstado", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.PartogramaHistorialCambio", b =>
                {
                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<byte?>("TipoCambioId")
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoCambioID");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.HasIndex("PartogramaId");

                    b.HasIndex("TipoCambioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PartogramaHistorialCambios");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.PartogramaPermiso", b =>
                {
                    b.Property<string>("PermisoPartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PermisoPartogramaID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<byte?>("TipoPermisoRolId")
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoPermisoRolID");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.HasKey("PermisoPartogramaId")
                        .HasName("PK__Partogra__CAF60972E381D3F8");

                    b.HasIndex("PartogramaId");

                    b.HasIndex("RolId");

                    b.HasIndex("TipoPermisoRolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PartogramaPermisos");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.PartogramasHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Expediente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.HasKey("HistoricoId")
                        .HasName("PK__Partogra__4A561D766D6EF489");

                    b.ToTable("Partogramas_Historico", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Password", b =>
                {
                    b.Property<Guid>("PasswordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PasswordID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("PassActual")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasMaxLength(16)
                        .HasColumnType("varbinary(16)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.HasKey("PasswordId")
                        .HasName("PK__Password__EA7BF0E814DA0B01");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Role", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("RolId")
                        .HasName("PK__Roles__F92302D138488F7D");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TiempoTrabajo", b =>
                {
                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Membranas")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Paridad")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("PartogramaId")
                        .HasName("PK__TiempoTr__2A6C3913842FB72A");

                    b.ToTable("TiempoTrabajos");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TiempoTrabajosHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Membranas")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Paridad")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("HistoricoId")
                        .HasName("PK__TiempoTr__4A561D76A74D7F05");

                    b.ToTable("TiempoTrabajosHistoricos");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TipoCambio", b =>
                {
                    b.Property<byte>("TipoCambioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoCambioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("TipoCambioId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("TipoCambioId")
                        .HasName("PK__TipoCamb__A510D87FCBE65E7E");

                    b.ToTable("TipoCambio", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TipoNotificacione", b =>
                {
                    b.Property<byte>("TipoNotificacionesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoNotificacionesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("TipoNotificacionesId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("TipoNotificacionesId")
                        .HasName("PK__TipoNoti__8AE962E24B543620");

                    b.ToTable("TipoNotificaciones");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TipoPermiso", b =>
                {
                    b.Property<byte>("TipoPermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoPermisoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("TipoPermisoId"));

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("TipoPermisoId")
                        .HasName("PK__TipoPerm__6A7B92F2B33666B3");

                    b.ToTable("TipoPermisos");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TipoPermisosRol", b =>
                {
                    b.Property<byte>("TipoPermisoRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoPermisoRolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("TipoPermisoRolId"));

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("TipoPermisoRolId")
                        .HasName("PK__TipoPerm__92DF0B773ABB90E1");

                    b.ToTable("TipoPermisosRol", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UsuarioID");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("PhoneNumber")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE79832BF79ED");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.VigilanciaMedica", b =>
                {
                    b.Property<string>("VigilanciaMedicaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("VigilanciaMedicaID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DolorIntensidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DolorLocalizacion")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DuracionContracciones")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FrecuenciaCardiacaFetal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FrecuenciaContraciones")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<string>("PosicionMaterna")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PresionArterial")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PulsoMaterno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Tiempo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("VigilanciaMedicaId")
                        .HasName("PK__Vigilanc__7C44AA214E17EE5B");

                    b.HasIndex("PartogramaId");

                    b.ToTable("VigilanciaMedica", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.VigilanciaMedicaHistorico", b =>
                {
                    b.Property<long>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("HistoricoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("DolorIntensidad")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DolorLocalizacion")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("DuracionContracciones")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("FrecuenciaCardiacaFetal")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("FrecuenciaContraciones")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<string>("PosicionMaterna")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("PresionArterial")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("PulsoMaterno")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime?>("Tiempo")
                        .HasColumnType("datetime");

                    b.Property<string>("VigilanciaMedicaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("VigilanciaMedicaID");

                    b.HasKey("HistoricoId")
                        .HasName("PK__Vigilanc__4A561D766DAC597B");

                    b.ToTable("VigilanciaMedica_Historico", (string)null);
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Vpp", b =>
                {
                    b.Property<string>("VppId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("VppID");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("isDelete");

                    b.Property<string>("PartogramaId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PartogramaID");

                    b.Property<string>("PlanoHodge")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("Tiempo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("VppId")
                        .HasName("PK__Vpps__086F0E45231B0BD8");

                    b.HasIndex("PartogramaId");

                    b.ToTable("Vpps");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Configuracione", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Usuario", "Usuario")
                        .WithOne("Configuracione")
                        .HasForeignKey("BirthflowMicroServices.Domain.Models.Configuracione", "UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Configura__Usuar__4222D4EF");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.DilatacionCervical", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany("DilatacionesCervicales")
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Dilatacio__Parto__5DCAEF64");

                    b.Navigation("Partograma");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.FrecuenciaCardiacaFetal", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany("FrecuenciaCardiacaFetals")
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Frecuenci__Parto__70DDC3D8");

                    b.Navigation("Partograma");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.FrecuenciaContracione", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany("FrecuenciaContraciones")
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Frecuenci__Parto__75A278F5");

                    b.Navigation("Partograma");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.NotaParto", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithOne("NotaParto")
                        .HasForeignKey("BirthflowMicroServices.Domain.Models.NotaParto", "PartogramaId")
                        .IsRequired()
                        .HasConstraintName("FK__NotaParto__Parto__7A672E12");

                    b.Navigation("Partograma");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.NotificationPartograma", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Notificatione", "Notificacion")
                        .WithMany()
                        .HasForeignKey("NotificacionId")
                        .HasConstraintName("FK__Notificat__Notif__05D8E0BE");

                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany()
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Notificat__Parto__03F0984C");

                    b.HasOne("BirthflowMicroServices.Domain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Notificat__Usuar__04E4BC85");

                    b.Navigation("Notificacion");

                    b.Navigation("Partograma");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Notificatione", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.TipoNotificacione", "NotificationType")
                        .WithMany("Notificationes")
                        .HasForeignKey("NotificationTypeId")
                        .HasConstraintName("FK__Notificat__Notif__01142BA1");

                    b.HasOne("BirthflowMicroServices.Domain.Models.Usuario", "Usuario")
                        .WithMany("Notificationes")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Notificat__Usuar__00200768");

                    b.Navigation("NotificationType");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Observacione", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.VigilanciaMedica", "VigilanciaMedica")
                        .WithOne("Observacione")
                        .HasForeignKey("BirthflowMicroServices.Domain.Models.Observacione", "VigilanciaMedicaId")
                        .IsRequired()
                        .HasConstraintName("FK__Observaci__Vigil__6754599E");

                    b.Navigation("VigilanciaMedica");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Partograma", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Usuario", "Usuario")
                        .WithMany("Partogramas")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Partogram__Usuar__45F365D3");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.PartogramaEstado", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithOne("PartogramaEstado")
                        .HasForeignKey("BirthflowMicroServices.Domain.Models.PartogramaEstado", "PartogramaId")
                        .IsRequired()
                        .HasConstraintName("FK__Partogram__Parto__5165187F");

                    b.HasOne("BirthflowMicroServices.Domain.Models.TipoPermiso", "TipoPermiso")
                        .WithMany("PartogramaEstados")
                        .HasForeignKey("TipoPermisoId")
                        .HasConstraintName("FK__Partogram__TipoP__59FA5E80");

                    b.Navigation("Partograma");

                    b.Navigation("TipoPermiso");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.PartogramaHistorialCambio", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany()
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Partogram__Parto__1332DBDC");

                    b.HasOne("BirthflowMicroServices.Domain.Models.TipoCambio", "TipoCambio")
                        .WithMany()
                        .HasForeignKey("TipoCambioId")
                        .HasConstraintName("FK__Partogram__TipoC__151B244E");

                    b.HasOne("BirthflowMicroServices.Domain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Partogram__Usuar__14270015");

                    b.Navigation("Partograma");

                    b.Navigation("TipoCambio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.PartogramaPermiso", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany("PartogramaPermisos")
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Partogram__Parto__0B91BA14");

                    b.HasOne("BirthflowMicroServices.Domain.Models.Role", "Rol")
                        .WithMany("PartogramaPermisos")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK__Partogram__RolID__0D7A0286");

                    b.HasOne("BirthflowMicroServices.Domain.Models.TipoPermisosRol", "TipoPermisoRol")
                        .WithMany("PartogramaPermisos")
                        .HasForeignKey("TipoPermisoRolId")
                        .HasConstraintName("FK__Partogram__TipoP__0E6E26BF");

                    b.HasOne("BirthflowMicroServices.Domain.Models.Usuario", "Usuario")
                        .WithMany("PartogramaPermisos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Partogram__Usuar__0C85DE4D");

                    b.Navigation("Partograma");

                    b.Navigation("Rol");

                    b.Navigation("TipoPermisoRol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Password", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Usuario", "Usuario")
                        .WithMany("Passwords")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Passwords__Usuar__3E52440B");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TiempoTrabajo", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithOne("TiempoTrabajo")
                        .HasForeignKey("BirthflowMicroServices.Domain.Models.TiempoTrabajo", "PartogramaId")
                        .IsRequired()
                        .HasConstraintName("FK__TiempoTra__Parto__4AB81AF0");

                    b.Navigation("Partograma");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Usuario", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Role", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK__Usuarios__RolID__398D8EEE");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.VigilanciaMedica", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany("VigilanciaMedicas")
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Vigilanci__Parto__628FA481");

                    b.Navigation("Partograma");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Vpp", b =>
                {
                    b.HasOne("BirthflowMicroServices.Domain.Models.Partograma", "Partograma")
                        .WithMany("Vpps")
                        .HasForeignKey("PartogramaId")
                        .HasConstraintName("FK__Vpps__Partograma__6C190EBB");

                    b.Navigation("Partograma");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Partograma", b =>
                {
                    b.Navigation("DilatacionesCervicales");

                    b.Navigation("FrecuenciaCardiacaFetals");

                    b.Navigation("FrecuenciaContraciones");

                    b.Navigation("NotaParto");

                    b.Navigation("PartogramaEstado");

                    b.Navigation("PartogramaPermisos");

                    b.Navigation("TiempoTrabajo");

                    b.Navigation("VigilanciaMedicas");

                    b.Navigation("Vpps");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Role", b =>
                {
                    b.Navigation("PartogramaPermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TipoNotificacione", b =>
                {
                    b.Navigation("Notificationes");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TipoPermiso", b =>
                {
                    b.Navigation("PartogramaEstados");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.TipoPermisosRol", b =>
                {
                    b.Navigation("PartogramaPermisos");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Configuracione");

                    b.Navigation("Notificationes");

                    b.Navigation("PartogramaPermisos");

                    b.Navigation("Partogramas");

                    b.Navigation("Passwords");
                });

            modelBuilder.Entity("BirthflowMicroServices.Domain.Models.VigilanciaMedica", b =>
                {
                    b.Navigation("Observacione");
                });
#pragma warning restore 612, 618
        }
    }
}
